# After Dark Systems - Nginx Configuration for Subdomain Routing
# Production-ready configuration for entertainment technology ecosystem

upstream main_site {
    server 127.0.0.1:8080;
}

upstream login_service {
    server 127.0.0.1:3001;
}

upstream api_gateway {
    server 127.0.0.1:3002;
}

upstream admin_panel {
    server 127.0.0.1:3003;
}

upstream docs_portal {
    server 127.0.0.1:3004;
}

upstream billing_service {
    server 127.0.0.1:3005;
}

upstream status_service {
    server 127.0.0.1:3006;
}

upstream analytics_service {
    server 127.0.0.1:3007;
}

upstream oss_portal {
    server 127.0.0.1:3008;
}

upstream sip_gateway {
    server 127.0.0.1:3009;
}

# Main Domain
server {
    listen 80;
    server_name afterdarksys.com www.afterdarksys.com;
    
    location / {
        proxy_pass http://main_site;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Central SSO System
server {
    listen 80;
    server_name login.afterdarksys.com;
    
    location / {
        proxy_pass http://login_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable CORS for cross-subdomain auth
        add_header Access-Control-Allow-Origin "*.afterdarksys.com";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        add_header Access-Control-Allow-Credentials true;
    }
}

# API Gateway (Revenue Engine)
server {
    listen 80;
    server_name api.afterdarksys.com;
    
    # Rate limiting for API protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    location / {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://api_gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific headers
        add_header X-API-Version "1.0";
        add_header X-RateLimit-Limit "600";
        add_header Access-Control-Allow-Origin "*";
    }
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Admin Control Panel
server {
    listen 80;
    server_name admin.afterdarksys.com;
    
    # Admin requires authentication
    location / {
        auth_request /auth;
        
        proxy_pass http://admin_panel;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location = /auth {
        internal;
        proxy_pass http://login_service/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }
}

# Developer Portal
server {
    listen 80;
    server_name docs.afterdarksys.com;
    
    location / {
        proxy_pass http://docs_portal;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static documentation assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}

# Billing System
server {
    listen 80;
    server_name billing.afterdarksys.com;
    
    location / {
        proxy_pass http://billing_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Security headers for payment processing
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }
}

# Status Page
server {
    listen 80;
    server_name status.afterdarksys.com;
    
    location / {
        proxy_pass http://status_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Public status page - no auth required
        add_header Access-Control-Allow-Origin "*";
    }
}

# Analytics Dashboard
server {
    listen 80;
    server_name analytics.afterdarksys.com;
    
    location / {
        auth_request /auth;
        
        proxy_pass http://analytics_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location = /auth {
        internal;
        proxy_pass http://login_service/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }
}

# Open Source Portal
server {
    listen 80;
    server_name oss.afterdarksys.com;
    
    location / {
        proxy_pass http://oss_portal;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# SIP Gateway
server {
    listen 80;
    server_name sip.afterdarksys.com;
    
    location / {
        proxy_pass http://sip_gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SIP-specific configuration
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
}